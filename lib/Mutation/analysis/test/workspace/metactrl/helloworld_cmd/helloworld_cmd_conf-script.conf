#! /bin/bash

#Mutant Fault Interaction: MFI
#project config template
#by Thierry Titcheu Chekam

##~~~~~~~~~~~~~~~~~ NOTE ~~~~~~~~~~~~~~~~~##
# ALL PATHS SPECIFIED SHOULD BE FULL PATHS #
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~##

########## BUILD ###########
#Identifier for the project, EX: 1, 2, anything ...
export MFI_ID="helloworld_cmd"

#Program name (executable name. Ex: rm, cut,...)
export MFI_PROGRAM="helloworld_cmd"

#Path to build script, ran as: <script> <compiler> <CFLAGS> <mode: build(make distclean,bootstrap, config, make); clean-make(make clean, make); make>
export MFI_BUILDSCRIPT=`pwd`"/helloworld_cmd_build.sh"

#Path to Source dir
#export MFI_SRCDIR=`pwd`"/src"

#Path to root dir
export MFI_ROOTDIR=`pwd`/"../../repos/$MFI_ID"

#Path to Executable built if different from SRCDIR
export MFI_EXEDIR=$MFI_ROOTDIR

#Paths to versions build executable: This is set by default and should not be changed
# this shuld be after MFI_BUILD_FOLDER export
#export MFI_BUILD_FOLDER=$MFI_ROOTDIR"/built-versions"
#export MFI_BUILD_SUBFOLDER_OLD=$MFI_BUILD_FOLDER"/old-version"
#export MFI_BUILD_SUBFOLDER_NEW=$MFI_BUILD_FOLDER"/new-version"
#export MFI_BUILD_SUBFOLDER_OLD_ASAN=$MFI_BUILD_FOLDER"/old-version-asan"
#export MFI_BUILD_SUBFOLDER_NEW_ASAN=$MFI_BUILD_FOLDER"/new-version-asan"
#export MFI_BUILD_SUBFOLDER_BEFORE_FIX=$MFI_BUILD_FOLDER"/before-fix-version"
#export MFI_BUILD_SUBFOLDER_FIXED=$MFI_BUILD_FOLDER"/fixed-version"

###~

########### MUTATION ########
#Path tofile containing list of source files to be mutated (relative to ROOTDIR)
export MFI_SRCSFILE=`pwd`"/helloworld_cmd_srclist.txt"

#Path to output dir
export MFI_OUTPUTDIR=`pwd`"/$MFI_ID-output"

###~

########## TESTS CASES ###########
#Path to file containing test case list
export MFI_TCSFILE=`pwd`"/helloworld_cmd_testscases.txt"

#Path to file containing test case list
#export MFI_TCSTOUCHFILE=`pwd`"/Ttestscases.txt"

#Path to test running shell script, ran as: <script> <ftest to run: obtained from TCS file>
#the scrip exit with status 0 when test pass and 1 when test fail.
export MFI_RUNTESTSCRIPT=`pwd`"/helloworld_cmd_runtests.sh"

#Oracle of the generated tests (path to the executable file, version of the program patched to fix the studied bug)
export MFI_BUGFIXEDEXE=`pwd`"/helloworld_cmd_bugfixed-$MFI_PROGRAM"

#Path to the diff patch file that contain also the 'klee_change', and that can be difectly ran on shadow to explore buggy-fixed divergence behavior
export MFI_FIXPATCHFILE_SHADOW=`pwd`"/helloworld_cmd_bugfix.patch"

###~

#XXX OThers (for KLEE)
export MFIKLEE_TEST_GENERATION_CALL_ARGS=`pwd`"/$MFI_ID""_klee-args-template.args"

export MFIKLEE_TEST_GENERATION_EXECUTION_TIMEOUT=300

export MFI_MART_MUTATION_SCOPE=`pwd`"/$MFI_ID""_mutation-scope.json"

#export MFI_PARAMS_FOR_MFI_PY__PREPROCESS_SOURCE='on'
export MFI_PARAMS_FOR_MFI_PY__NO_MUTATION='off'
export MFI_PARAMS_FOR_MFI_PY__TEST_SUITE='all'
###~

# MART mutation linking flags
#export MART_EXECUTABLE_LINKING_FLAGS="-lgmp"

